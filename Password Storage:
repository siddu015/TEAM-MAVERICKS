import sqlite3
from passlib.hash import bcrypt

# Database connection
conn = sqlite3.connect('passwords.db')
cursor = conn.cursor()

# Create the users table if it doesn't exist
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT UNIQUE,
        password TEXT
    )
''')
conn.commit()

# User registration
def register_user(username, password):
    # Hash the password
    hashed_password = bcrypt.hash(password)

    # Insert user into the database
    cursor.execute('INSERT INTO users (username, password) VALUES (?, ?)', (username, hashed_password))
    conn.commit()

# User login
def login_user(username, password):
    # Retrieve the hashed password from the database
    cursor.execute('SELECT password FROM users WHERE username = ?', (username,))
    result = cursor.fetchone()

    if result is None:
        return False

    hashed_password = result[0]

    # Verify the password
    return bcrypt.verify(password, hashed_password)

# Close the database connection
def close_connection():
    conn.close()

# Example usage
register_user('john.doe', 'secretpassword')

if login_user('john.doe', 'secretpassword'):
    print('Login successful.')
else:
    print('Login failed.')

close_connection()
